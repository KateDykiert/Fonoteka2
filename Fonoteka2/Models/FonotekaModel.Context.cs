//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fonoteka2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FonotekaDBEntities3 : DbContext
    {
        public FonotekaDBEntities3()
            : base("name=FonotekaDBEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Album> Album { get; set; }
        public virtual DbSet<Gatunek> Gatunek { get; set; }
        public virtual DbSet<Instrument> Instrument { get; set; }
        public virtual DbSet<Playlista> Playlista { get; set; }
        public virtual DbSet<Przynaleznosc> Przynaleznosc { get; set; }
        public virtual DbSet<Umiejetnosc> Umiejetnosc { get; set; }
        public virtual DbSet<Utwor> Utwor { get; set; }
        public virtual DbSet<Wykonawca> Wykonawca { get; set; }
        public virtual DbSet<Zespol> Zespol { get; set; }
        public virtual DbSet<UtworyAlbumuView> UtworyAlbumuView { get; set; }
        public virtual DbSet<NajdluzszeAlbumy> NajdluzszeAlbumy { get; set; }
        public virtual DbSet<LongestAlbums> LongestAlbums { get; set; }
    
        public virtual int DodajUtwor(Nullable<int> idZespolu, Nullable<int> idAlbumu, Nullable<int> idGatunku, string tytul, Nullable<int> minuty, Nullable<int> sekundy)
        {
            var idZespoluParameter = idZespolu.HasValue ?
                new ObjectParameter("IdZespolu", idZespolu) :
                new ObjectParameter("IdZespolu", typeof(int));
    
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            var idGatunkuParameter = idGatunku.HasValue ?
                new ObjectParameter("IdGatunku", idGatunku) :
                new ObjectParameter("IdGatunku", typeof(int));
    
            var tytulParameter = tytul != null ?
                new ObjectParameter("Tytul", tytul) :
                new ObjectParameter("Tytul", typeof(string));
    
            var minutyParameter = minuty.HasValue ?
                new ObjectParameter("Minuty", minuty) :
                new ObjectParameter("Minuty", typeof(int));
    
            var sekundyParameter = sekundy.HasValue ?
                new ObjectParameter("Sekundy", sekundy) :
                new ObjectParameter("Sekundy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajUtwor", idZespoluParameter, idAlbumuParameter, idGatunkuParameter, tytulParameter, minutyParameter, sekundyParameter);
        }
    
        public virtual int UsunUtwor(Nullable<int> idUtworu)
        {
            var idUtworuParameter = idUtworu.HasValue ?
                new ObjectParameter("IdUtworu", idUtworu) :
                new ObjectParameter("IdUtworu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsunUtwor", idUtworuParameter);
        }
    
        public virtual int UsunWszystkieUtworuDanegoGatunku(string nazwaGatunku)
        {
            var nazwaGatunkuParameter = nazwaGatunku != null ?
                new ObjectParameter("NazwaGatunku", nazwaGatunku) :
                new ObjectParameter("NazwaGatunku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsunWszystkieUtworuDanegoGatunku", nazwaGatunkuParameter);
        }
    
        public virtual int ZmienTytul(Nullable<int> idUtworu, string tytul)
        {
            var idUtworuParameter = idUtworu.HasValue ?
                new ObjectParameter("IdUtworu", idUtworu) :
                new ObjectParameter("IdUtworu", typeof(int));
    
            var tytulParameter = tytul != null ?
                new ObjectParameter("Tytul", tytul) :
                new ObjectParameter("Tytul", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZmienTytul", idUtworuParameter, tytulParameter);
        }
    
        public virtual ObjectResult<wyswietlinstrumentywykonawcy_Result> wyswietlinstrumentywykonawcy(Nullable<int> idwykonawcy)
        {
            var idwykonawcyParameter = idwykonawcy.HasValue ?
                new ObjectParameter("Idwykonawcy", idwykonawcy) :
                new ObjectParameter("Idwykonawcy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wyswietlinstrumentywykonawcy_Result>("wyswietlinstrumentywykonawcy", idwykonawcyParameter);
        }
    
        public virtual int DodajWykonawce(Nullable<int> idWykonawcy, Nullable<int> idZespolu, string imie, string nazwisko, string pseudonim)
        {
            var idWykonawcyParameter = idWykonawcy.HasValue ?
                new ObjectParameter("IdWykonawcy", idWykonawcy) :
                new ObjectParameter("IdWykonawcy", typeof(int));
    
            var idZespoluParameter = idZespolu.HasValue ?
                new ObjectParameter("IdZespolu", idZespolu) :
                new ObjectParameter("IdZespolu", typeof(int));
    
            var imieParameter = imie != null ?
                new ObjectParameter("Imie", imie) :
                new ObjectParameter("Imie", typeof(string));
    
            var nazwiskoParameter = nazwisko != null ?
                new ObjectParameter("Nazwisko", nazwisko) :
                new ObjectParameter("Nazwisko", typeof(string));
    
            var pseudonimParameter = pseudonim != null ?
                new ObjectParameter("Pseudonim", pseudonim) :
                new ObjectParameter("Pseudonim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajWykonawce", idWykonawcyParameter, idZespoluParameter, imieParameter, nazwiskoParameter, pseudonimParameter);
        }
    
        public virtual ObjectResult<UtworyAlbumu_Result> UtworyAlbumu(Nullable<int> idAlbumu)
        {
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UtworyAlbumu_Result>("UtworyAlbumu", idAlbumuParameter);
        }
    
        public virtual ObjectResult<UtworyAlbumu1_Result> UtworyAlbumu1(Nullable<int> idAlbumu)
        {
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UtworyAlbumu1_Result>("UtworyAlbumu1", idAlbumuParameter);
        }
    
        public virtual ObjectResult<UtworyZView_Result> UtworyZView(Nullable<int> idAlbumu)
        {
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UtworyZView_Result>("UtworyZView", idAlbumuParameter);
        }
    
        public virtual int DeleteUtworyZView(Nullable<int> idUtworu)
        {
            var idUtworuParameter = idUtworu.HasValue ?
                new ObjectParameter("IdUtworu", idUtworu) :
                new ObjectParameter("IdUtworu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUtworyZView", idUtworuParameter);
        }
    
        public virtual ObjectResult<UtworyZView1_Result> UtworyZView1(Nullable<int> idAlbumu)
        {
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UtworyZView1_Result>("UtworyZView1", idAlbumuParameter);
        }
    
        public virtual ObjectResult<ZliczCzas_Result> ZliczCzas(Nullable<int> idAlbumu)
        {
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("IdAlbumu", idAlbumu) :
                new ObjectParameter("IdAlbumu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZliczCzas_Result>("ZliczCzas", idAlbumuParameter);
        }
    
        public virtual int BezpiecznikEdit(byte[] stare, Nullable<int> idstare)
        {
            var stareParameter = stare != null ?
                new ObjectParameter("stare", stare) :
                new ObjectParameter("stare", typeof(byte[]));
    
            var idstareParameter = idstare.HasValue ?
                new ObjectParameter("idstare", idstare) :
                new ObjectParameter("idstare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BezpiecznikEdit", stareParameter, idstareParameter);
        }
    
        public virtual int updateAlbumTime(Nullable<int> idUtworu, Nullable<int> idZespolu, Nullable<int> idAlbumu, Nullable<int> idGatunku, string tytul, Nullable<int> minuty, Nullable<int> sekundy)
        {
            var idUtworuParameter = idUtworu.HasValue ?
                new ObjectParameter("idUtworu", idUtworu) :
                new ObjectParameter("idUtworu", typeof(int));
    
            var idZespoluParameter = idZespolu.HasValue ?
                new ObjectParameter("idZespolu", idZespolu) :
                new ObjectParameter("idZespolu", typeof(int));
    
            var idAlbumuParameter = idAlbumu.HasValue ?
                new ObjectParameter("idAlbumu", idAlbumu) :
                new ObjectParameter("idAlbumu", typeof(int));
    
            var idGatunkuParameter = idGatunku.HasValue ?
                new ObjectParameter("idGatunku", idGatunku) :
                new ObjectParameter("idGatunku", typeof(int));
    
            var tytulParameter = tytul != null ?
                new ObjectParameter("tytul", tytul) :
                new ObjectParameter("tytul", typeof(string));
    
            var minutyParameter = minuty.HasValue ?
                new ObjectParameter("minuty", minuty) :
                new ObjectParameter("minuty", typeof(int));
    
            var sekundyParameter = sekundy.HasValue ?
                new ObjectParameter("sekundy", sekundy) :
                new ObjectParameter("sekundy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateAlbumTime", idUtworuParameter, idZespoluParameter, idAlbumuParameter, idGatunkuParameter, tytulParameter, minutyParameter, sekundyParameter);
        }
    
        public virtual int CzasZMiesiaca()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CzasZMiesiaca");
        }
    
        public virtual int Statystyki(ObjectParameter @out, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Statystyki", @out, out2, out3, out4);
        }
    
        public virtual ObjectResult<Nullable<int>> getStat(ObjectParameter @out, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getStat", @out, out2, out3, out4);
        }
    
        public virtual ObjectResult<Nullable<int>> Stats(ObjectParameter @out, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Stats", @out, out2, out3, out4);
        }
    
        public virtual ObjectResult<test1_Result> test1(ObjectParameter wyjscie, ObjectParameter wyjscie2)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test1_Result>("test1", wyjscie, wyjscie2);
        }
    
        public virtual ObjectResult<Nullable<int>> testjeden(ObjectParameter wyjscie, ObjectParameter wyjscie2)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("testjeden", wyjscie, wyjscie2);
        }
    
        public virtual ObjectResult<Nullable<int>> testowe(ObjectParameter wyjscie, ObjectParameter wyjscie2)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("testowe", wyjscie, wyjscie2);
        }
    
        public virtual ObjectResult<LongestFromView_Result> LongestFromView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LongestFromView_Result>("LongestFromView");
        }
    
        public virtual ObjectResult<Nullable<int>> Staty(ObjectParameter @out, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Staty", @out, out2, out3, out4);
        }
    
        public virtual ObjectResult<Nullable<int>> CzasZMiesiaca2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CzasZMiesiaca2");
        }
    }
}
